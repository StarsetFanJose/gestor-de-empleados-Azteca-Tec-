/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package paneles;

import Objeto.Empleado;
import java.awt.Color;
import java.io.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.*;
import javax.swing.text.*;
/**
 *
 * @author josea
 */
public class AgregarEmpleado extends javax.swing.JPanel {

    /**
     * Creates new form AgregarEmpleado
     */
    public AgregarEmpleado() {
        initComponents();
        this.cboPuesto.setEnabled(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTiempoTrabajo = new javax.swing.JTextField();
        txtCurp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPago = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtFechaNacimiento = new javax.swing.JTextField();
        txtFechaContrato = new javax.swing.JTextField();
        cboEstatus = new javax.swing.JComboBox<>();
        cboArea = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cboPuesto = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 3, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Agregar Empleado a la Empresa");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Recursos/agregar empleado boton.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(46, 46, 46))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 170));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        jLabel3.setText("Rellena todos los espacios para guardar a un empleado");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(10, 20, 430, 20);

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel4.setText("Tiempo de Trabajao (Semanas):");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(580, 100, 190, 30);

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel5.setText("Fecha del Contrato:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(20, 100, 130, 30);

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel6.setText("Apellidos:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(150, 50, 80, 30);

        txtTiempoTrabajo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jPanel2.add(txtTiempoTrabajo);
        txtTiempoTrabajo.setBounds(770, 100, 50, 30);

        txtCurp.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jPanel2.add(txtCurp);
        txtCurp.setBounds(350, 100, 220, 30);

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel7.setText("Estatus:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(730, 160, 60, 30);

        txtNombres.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jPanel2.add(txtNombres);
        txtNombres.setBounds(480, 50, 180, 30);

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel8.setText("ID:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(20, 50, 50, 30);

        txtApellido.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jPanel2.add(txtApellido);
        txtApellido.setBounds(220, 50, 180, 30);

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel9.setText("CURP:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(300, 100, 50, 30);

        txtPago.setEditable(false);
        txtPago.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jPanel2.add(txtPago);
        txtPago.setBounds(930, 100, 110, 30);

        jLabel10.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel10.setText("Fecha de Nacimiento:");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(670, 50, 140, 30);

        txtId.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jPanel2.add(txtId);
        txtId.setBounds(50, 50, 90, 30);

        jLabel11.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel11.setText("Nombres:");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(410, 50, 70, 30);

        jLabel12.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel12.setText("Pago Inicial:");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(840, 100, 90, 30);

        txtFechaNacimiento.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jPanel2.add(txtFechaNacimiento);
        txtFechaNacimiento.setBounds(820, 50, 130, 30);

        txtFechaContrato.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jPanel2.add(txtFechaContrato);
        txtFechaContrato.setBounds(150, 100, 140, 30);

        cboEstatus.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        cboEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecciona un Estatus --", "-- Activo --", "-- Inactivo --", "-- En Capacitacion --" }));
        jPanel2.add(cboEstatus);
        cboEstatus.setBounds(790, 160, 190, 30);

        cboArea.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        cboArea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecciona un Area de Empleo --", "-- Marketing --", "-- Desarrollador en software --", "-- Electronica --", "-- Limpieza --", "-- Seguridad --" }));
        cboArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAreaActionPerformed(evt);
            }
        });
        jPanel2.add(cboArea);
        cboArea.setBounds(100, 160, 240, 30);

        jLabel14.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel14.setText("Area Empleo:");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(20, 160, 90, 30);

        jLabel15.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel15.setText("Puesto de Empleo:");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(350, 160, 130, 30);

        cboPuesto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        cboPuesto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecciona un Puesto de Empleo --" }));
        cboPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPuestoActionPerformed(evt);
            }
        });
        jPanel2.add(cboPuesto);
        cboPuesto.setBounds(470, 160, 250, 30);

        btnGuardar.setBackground(new java.awt.Color(0, 0, 102));
        btnGuardar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Recursos/agregar empleado boton.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarMouseExited(evt);
            }
        });
        jPanel2.add(btnGuardar);
        btnGuardar.setBounds(320, 260, 280, 140);

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 1090, 500));
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        this.btnGuardar.setBackground(Color.green);
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseExited
        this.btnGuardar.setBackground(new Color(0, 0, 102));
    }//GEN-LAST:event_btnGuardarMouseExited

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        if (validarFormulario()) {
            //Aqui va el codigo para guardar si la condicion es verdadera XD
            guardarEmpleado(); //Manda a llamr al metodo guardarEmpleado
        }
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void cboAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAreaActionPerformed
        this.cboPuesto.removeAllItems();
        
        String seleccion = (String) this.cboArea.getSelectedItem();
        
        if ("-- Marketing --".equals(seleccion)) {
            this.cboPuesto.setEnabled(true);
            this.cboPuesto.addItem("-- Selecciona un Puesto de Empleo --");
            this.cboPuesto.addItem("-- Diseño Grafico --");
            this.cboPuesto.addItem("-- Estrategias Digitales --");
            this.cboPuesto.addItem("-- Publicidad --");
        } else if ("-- Desarrollador en software --".equals(seleccion)) {
            this.cboPuesto.setEnabled(true);
            this.cboPuesto.addItem("-- Selecciona un Puesto de Empleo --");
            this.cboPuesto.addItem("-- Desarrollador Junior --");
            this.cboPuesto.addItem("-- Desarrollador Senior --");
            this.cboPuesto.addItem("-- Desarrollador Master --");
        } else if ("-- Electronica --".equals(seleccion)) {
            this.cboPuesto.setEnabled(true);
            this.cboPuesto.addItem("-- Selecciona un Puesto de Empleo --");
            this.cboPuesto.addItem("-- Tecnico en electronica --");
            this.cboPuesto.addItem("-- Tecnico en Comunicaciones --");
            this.cboPuesto.addItem("-- Ingeniero Electronico --");
        } else if ("-- Limpieza --".equals(seleccion)) {
            this.cboPuesto.setEnabled(true);
            this.cboPuesto.addItem("-- Selecciona un Puesto de Empleo --");
            this.cboPuesto.addItem("-- Limpieza en Oficinas --");
            this.cboPuesto.addItem("-- Limpieza en Equipos Electronicos --");
            this.cboPuesto.addItem("-- Jefe de Limpieza --");
        } else if ("-- Seguridad --".equals(seleccion)) {
            this.cboPuesto.setEnabled(true);
            this.cboPuesto.addItem("-- Selecciona un Puesto de Empleo --");
            this.cboPuesto.addItem("-- Guardia 12x12 --");
            this.cboPuesto.addItem("-- Guardia 24x24 --");
            this.cboPuesto.addItem("-- Ingeniero en Ciberseguridad --");
        } else {
            this.cboPuesto.addItem("-- Selecciona un Puesto de Empleo --");
            this.cboPuesto.setEnabled(false);
        }
    }//GEN-LAST:event_cboAreaActionPerformed

    private void cboPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPuestoActionPerformed
        
        String seleccion = (String) this.cboPuesto.getSelectedItem();
        
        if ("-- Selecciona un Puesto de Empleo --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(0.0));
        } else if ("-- Diseño Grafico --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(1000.50));
        } else if ("-- Estrategias Digitales --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(2000.75));
        } else if ("-- Publicidad --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(1500.25));
        } else if ("-- Desarrollador Junior --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(2500.70));
        } else if ("-- Desarrollador Senior --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(5000.10));
        } else if ("-- Desarrollador Master --".equals(seleccion)) {
             this.txtPago.setText(String.valueOf(10000.00));
        } else if ("-- Tecnico en electronica --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(2300.50));
        } else if ("-- Tecnico en Comunicaciones --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(3000.25));
        } else if ("-- Ingeniero Electronico --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(5000.50));
        } else if ("-- Limpieza en Oficinas --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(1000.25));
        } else if ("-- Limpieza en Equipos Electronicos --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(1000.30));
        } else if ("-- Jefe de Limpieza --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(1500.75));
        }  else if ("-- Guardia 12x12 --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(3000.50)); 
        } else if ("-- Guardia 24x24 --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(3000.55));
        } else if ("-- Ingeniero en Ciberseguridad --".equals(seleccion)) {
            this.txtPago.setText(String.valueOf(5000.50));
        } else {
            this.txtPago.setText("");
        }
    }//GEN-LAST:event_cboPuestoActionPerformed

    private boolean validarTextField(JTextField textField, String mensaje) {
        if (textField.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, mensaje);
            textField.requestFocus();
            return false;
        }
        return true;
    }
    
    private boolean validarComboBox(JComboBox<String> comboBox, String mensaje) {
        if (comboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, mensaje);
            comboBox.requestFocus();
            return false;
        }
        return true;
    }
    
    private boolean validarFormulario() {
        if (!validarTextField(this.txtId, "El campo ID esta vacio.")) return false;
        if (!validarTextField(this.txtApellido, "El campo Apellido esta vacio.")) return false;
        if (!validarTextField(this.txtNombres, "El campo Nombres esta vacio.")) return false;
        if (!validarTextField(this.txtFechaNacimiento, "El campo Fecha de Nacimiento esta vacio.")) return false;
        if (!validarTextField(this.txtFechaContrato, "El campo Fecha de Contrato esta vacio.")) return false;
        if (!validarTextField(this.txtCurp, "El campo Curp esta vacio.")) return false;
        if (!validarTextField(this.txtTiempoTrabajo, "El campo Tiempo de Trabajo esta vacio.")) return false;
        if (!validarTextField(this.txtPago, "El campo Pago esta vacio.")) return false;
        //Validar los combo box
        if (!validarComboBox(this.cboArea, "No has seleccionado un area de empleo.")) return false;
        if (!validarComboBox(this.cboPuesto, "No has seleccionado un puesto de empleo")) return false;
        if (!validarComboBox(this.cboEstatus, "No has seleccionado el estatus del empleado.")) return false;
        
        return true;
    }
    
    private void guardarEmpleado() {
        if (!validarFecha(this.txtFechaNacimiento.getText(), this.txtFechaContrato.getText())) {
            return; // Sale del metodo si las fechas no son validas
        }
        
        try {
        Empleado empleado = new Empleado(this.txtId.getText(), this.txtApellido.getText(), this.txtNombres.getText(), this.txtFechaNacimiento.getText(),
        this.txtFechaContrato.getText(), this.txtCurp.getText(), Integer.parseInt(this.txtTiempoTrabajo.getText()), Double.parseDouble(this.txtPago.getText()), this.cboArea.getSelectedItem().toString(),
        this.cboPuesto.getSelectedItem().toString(), this.cboEstatus.getSelectedItem().toString()); //Aqui es para crear el objeto Empleado
        
        try (BufferedWriter bw = new BufferedWriter(new FileWriter("empleados.txt", true))) {
            bw.write(empleado.toString());
            bw.newLine();
            }
        JOptionPane.showMessageDialog(null, "Empleado agregado correctamente", "Exito", 1);
        limpiarCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar" + e.getMessage(), "ERROR", 0);
        }
    }
    
    private void limpiarCampos() {
        this.txtId.setText(null);
        this.txtApellido.setText(null);
        this.txtNombres.setText(null);
        this.txtFechaNacimiento.setText(null);
        this.txtFechaContrato.setText(null);
        this.txtCurp.setText(null);
        this.txtTiempoTrabajo.setText(null);
        this.txtPago.setText(null);
        this.cboArea.setSelectedItem("-- Selecciona un Area de Empleo --");
        this.cboPuesto.setSelectedItem("-- Selecciona un Puesto de Empleo --");
        this.cboEstatus.setSelectedItem("-- Selecciona un Estatus --");
    }
    
    private boolean validarFecha(String fechaNacimiento, String fechaContrato) {
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
        formatoFecha.setLenient(false); // Evita fechas pasadas como 31/02/2023
        try {
            formatoFecha.parse(fechaNacimiento);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "La fecha de nacimiento tiene un formato incorrecto. \n El formato de"
                    + "fecha debe ser dd/MM/yyyy.", "Error de formato", 2);
            this.txtFechaNacimiento.requestFocus();
            return false;
        }
        
        try {
            formatoFecha.parse(fechaContrato);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "La fecha de contrato tiene un formato incorrecto. \n El formato debe ser"
                    + "dd/MM/yyyy.", "Error de formato", 2);
            this.txtFechaContrato.requestFocus();
            return false;
        }
        return true; // Si Ambas fechas son validas
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cboArea;
    private javax.swing.JComboBox<String> cboEstatus;
    private javax.swing.JComboBox<String> cboPuesto;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCurp;
    private javax.swing.JTextField txtFechaContrato;
    private javax.swing.JTextField txtFechaNacimiento;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtPago;
    private javax.swing.JTextField txtTiempoTrabajo;
    // End of variables declaration//GEN-END:variables
}
